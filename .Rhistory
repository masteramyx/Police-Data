}
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "True"))
my.data$mentalFalse[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "False"))
}
View(my.data)
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "True", my.data$state == unique(my.data$state)[i]))
my.data$mentalFalse[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "False"))
}
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "True", my.data$state == unique(my.data$state)[i]))
my.data$mentalFalse[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, washPost$signs_of_mental_illness == "False", my.data$state == unique(my.data$state)[i]))
}
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "True", my.data$state == unique(my.data$state)[i]))
my.data$mentalFalse[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "False", my.data$state == unique(my.data$state)[i]))
}
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "True", my.data$state == unique(my.data$state)[i]))
}
length(unique(my.data$state))
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "True" & my.data$state == unique(my.data$state)[i]))
}
for(i in 1:length(unique(my.data$state))){
my.data$mentalTrue[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "True" & my.data$state == unique(my.data$state)[i]))
my.data$mentalFalse[my.data$state == unique(my.data$state)[i]] <- n_distinct(subset(my.data, my.data$signs_of_mental_illness == "False" & my.data$state == unique(my.data$state)[i]))
}
hist(my.data$signs_of_mental_illness)
hist(my.data$mentalTrue, my.data$mentalFalse)
hist(my.data$mentalTrue)
hist(t(my.data$mentalTrue))
my.data$mentalTrue
hist(unique(my.data$mentalTrue))
class(my.data$mentalFalse)
barplot(my.data$mentalFalse)
?matrix
ill <- matrix(my.data, dimnames = c("state","menalTrue", "mentalFalse"))
n1 <- c("state","menalTrue", "mentalFalse")
ill <- matrix(my.data, dimnames = n1)
ill <- matrix(my.data, dimnames = list(n1)
barplot(my.data$mentalFalse)
illCount <- table(unlist(races))
barplot(illCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
ill <- matrix(my.data, dimnames = list(n1))
remove(n1)
?barplot
n1 <- table(unlist(m.data[, c(1,23,24)]))
n1 <- table(unlist(my.data[, c(1,23,24)]))
n1
my.data[,c(1,23,24)]
unique(my.data$state[my.data[,c(1,23,24)]]
barplot(my.data, col=c("red","green"))
illCount <- table(unlist(races))
barplot(illCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
unique(my.data$state[my.data[,c(1,23,24))
barplot(my.data, col=c("red","green"))
illCount <- table(unlist(races))
barplot(illCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
my.data[,c(1,23,24)]
my.data[,c(1,23,24)] %>% group_by(my.data$state)
my.data[,c(1,23,24)] %>% group_by(unique(my.data$state))
my.data[,c(1,23,24)] %>% (unique(my.data$state)
barplot(my.data, col=c("red","green"))
illCount <- table(unlist(races))
barplot(illCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
my.data[,c(1,23,24)] %>% unique(my.data$state)
n1 <- my.data[,c(1,23,24)]
n1 <- table(unlist(n1))
n1
n1 <- my.data[,c(1,23,24)]
View(n1)
t(n1)
n1 <- t(n1)
View(n1)
barplot(n1, col=c("red","green"))
n1 <- my.data[,c(1,23,24)]
n1 <- table(n1)
n1
n1 <- my.data[,c(1,23,24)]
n1 <- matrix(n1)
n1
n1 <- my.data[,c(1,23,24)]
illCount
library(ggplot2)
?ggplot
ggplot(n1, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
#Change "" factor to "U"(Unknown race)
levels(washPost$race)[1] <- "U"
levels(washPost$race)
attach(washPost)
races <- subset(washPost, select = race)
remove(races)
raceCount <- table(unlist(races))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
raceCount <- table(unlist(races))
attach(washPost)
raceCount <- table(unlist(races))
illCount <- table(unlist(subset(washPost, select = race)))
barplot(illCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
min(washPost$date)
class(washPost$date)
detach(washPost)
library(lubridate)
washPost$date <- mdy(as.character(washPost$date))
washPost$date <- mdy(as.character(as.factor(washPost$date)))
washPost$date <- mdy(as.character(washPost$date))
class(washPost$date)
min(washPost$date)
washPost[order(washPost$date)[1]]
washPost[1,]
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
#Change "" factor to "U"(Unknown race)
levels(washPost$race)[1] <- "U"
levels(washPost$race)
raceCount <- table(unlist(subset(washPost, select = race)))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
class(washPost$date)
washPost[1,]
washPost$date <- mdy(as.character(washPost$date))
washPost$date1 <- mdy(as.character(washPost$date))
washPost$date1 <- NULL
class(washPost$date)
washPost[1,]
washPost[123,]
search()
detach(washPost)
washPost[123,]
View(washPost)
washPost$date <- mdy(as.character(washPost$date))
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
levels(washPost$race)[1] <- "U"
levels(washPost$race)
attach(washPost)
class(date)
class(date)
washPost$midDate <- mdy(as.character(date))
View(washPost)
class(date)
class(washPost$date)
class(midDate)
detach(washPost)
attach(washPost)
class(midDate)
?mdy()
washPost$midDate <- ydm(as.character(date))
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
attach(washPost)
search()
detach(washPost)
detach(washPost)
attach(washPost)
library(lubridate)
washPost$midDate <- ydm(as.character(date))
washPost$midDate <- ymd(as.character(date))
washPost$date <- ymd(as.character(date))
search()
detach(washPost)
class(washPost$date)
raceCount <- table(unlist(subset(washPost, select = race)))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Shooting victim's race")
read.csv("shooting_subjects_austin_tx.csv", header = TRUE, sep = ",")
austinTx <- read.csv("shooting_subjects_austin_tx.csv", header = TRUE, sep = ",")
View(austinTx)
bloat.data <- merge(washPost, state.fips, by.x = "state", by.y = "abb")
my.data <- bloat.data[!duplicated(bloat.data$id), ]
View(washPost)
washPost$state <- as.character(washPost$state)
library(dplyr)
for(j in 1:length(unique(washPost$state))){
washPost$total[washPost$state == unique(washPost$state)[j]] <- n_distinct(subset(washPost, state == unique(washPost$state)[j]))
}
search()
data(state.fips)
bloat.data <- merge(washPost, state.fips, by.x = "state", by.y = "abb")
data(state.fips)
library(rworldmap)
library(maps)
library(mapdata)
data(state.fips)
bloat.data <- merge(washPost, state.fips, by.x = "state", by.y = "abb")
my.data <- bloat.data[!duplicated(bloat.data$id), ]
my.colors <- colorRampPalette(c("blue","red"))(11)
attach(my.data)
my.data$colorID[0 <= my.data$total & my.data$total < 45] <- 1
my.data$colorID[45 <= my.data$total & my.data$total< 90] <- 2
my.data$colorID[90 <= my.data$total & my.data$total< 135] <- 3
my.data$colorID[135 <= my.data$total & my.data$total< 180] <- 4
my.data$colorID[180 <= my.data$total & my.data$total< 225] <- 5
my.data$colorID[225 <= my.data$total & my.data$total< 270] <- 6
my.data$colorID[270 <= my.data$total & my.data$total< 315] <- 7
my.data$colorID[315 <= my.data$total & my.data$total< 360] <- 8
my.data$colorID[360 <= my.data$total & my.data$total< 405] <- 9
my.data$colorID[405 <= my.data$total & my.data$total< 450] <- 10
my.data$colorID[450 <= my.data$total & my.data$total< 495] <- 11
my.data$color <- my.colors[my.data$colorID]
detach(my.data)
View(my.data)
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
title(main = "Total Police Shootings Since 2015")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
class(washPost$armed)
my.colors <- colorRampPalette(c("blue","orange" "red"))(11)
my.colors <- colorRampPalette(c("blue","orange", "red"))(11)
my.data$colorID[0 <= my.data$total & my.data$total < 45] <- 1
my.data$colorID[45 <= my.data$total & my.data$total< 90] <- 2
my.data$colorID[90 <= my.data$total & my.data$total< 135] <- 3
my.data$colorID[135 <= my.data$total & my.data$total< 180] <- 4
my.data$colorID[180 <= my.data$total & my.data$total< 225] <- 5
my.data$colorID[225 <= my.data$total & my.data$total< 270] <- 6
my.data$colorID[270 <= my.data$total & my.data$total< 315] <- 7
my.data$colorID[315 <= my.data$total & my.data$total< 360] <- 8
my.data$colorID[360 <= my.data$total & my.data$total< 405] <- 9
my.data$colorID[405 <= my.data$total & my.data$total< 450] <- 10
my.data$colorID[450 <= my.data$total & my.data$total< 495] <- 11
my.data$color <- my.colors[my.data$colorID]
#build map
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
title(main = "Total Police Shootings Since 2015")
#add state borders
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
legend("bottomleft", ncol = 2, c("0-45", "45-90", "135-180","180-225", "225-270","270-315","315-360",
"360-405","405-450", "450-497"), fill = my.colors, cex = .25)
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
min(total)
n1 <- my.data[,c(1,23,24)]
library(ggplot2)
ggplot(n1, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
n1 <- my.data[,c(1,23,24)]
my.colors <- colorRampPalette(c("blue","orange", "red"))(11)
my.data$colorID[0 <= my.data$total & my.data$total < 45] <- 1
my.data$colorID[45 <= my.data$total & my.data$total< 90] <- 2
my.data$colorID[90 <= my.data$total & my.data$total< 135] <- 3
my.data$colorID[135 <= my.data$total & my.data$total< 180] <- 4
my.data$colorID[180 <= my.data$total & my.data$total< 225] <- 5
my.data$colorID[225 <= my.data$total & my.data$total< 270] <- 6
my.data$colorID[270 <= my.data$total & my.data$total< 315] <- 7
my.data$colorID[315 <= my.data$total & my.data$total< 360] <- 8
my.data$colorID[360 <= my.data$total & my.data$total< 405] <- 9
my.data$colorID[405 <= my.data$total & my.data$total< 450] <- 10
my.data$colorID[450 <= my.data$total & my.data$total< 495] <- 11
my.data$color <- my.colors[my.data$colorID]
View(my.data)
library(ggplot2)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
class(washPost$signs_of_mental_illness)
class(my.data$signs_of_mental_illness)
View(austinTx)
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
class(austinTx$Subject.Race.Ethnicity)
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity) , position = "dodge")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity), position = "dodge")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
?ae
?aes
?ggplot
?geom_bar
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes( my.data$signs_of_mental_illness), position = "dodge")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
?fill
ggplot(my.data, aes(my.data$state, fill = my.data$signs_of_mental_illness))
ggplot(my.data, aes(my.data$state, fill = my.data$state))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "dodge")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity), position = "dodge")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity), position = "stack")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
, position = "stack"
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity), position = "stack")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
?unlist
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
#Change "" factor to "U"(Unknown race)
levels(washPost$race)[1] <- "U"
levels(washPost$race)
attach(washPost)
library(lubridate)
washPost$date <- ymd(as.character(date))
detach(washPost)
class(washPost$date)
washPost$date <- ymd(as.character(date))
library(lubridate)
washPost$date <- ymd(as.character(date))
View(washPost)
class(date)
class(washPost$date)
search()
washPost$date <- ymd(as.character(date))
washPost$date <- ymd(as.character(washPost$date))
class(washPost$date)
search()
barplot(subset(washPost,select =race))
barplot(subset(washPost, select = washPost$race))
data(state.fips)
library(rworldmap)
library(maps)
library(mapdata)
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
data(state.fips)
attach(state.fips)
View(state.fips)
detach(state.fips)
View(austinTx)
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
library(rworldmap)
library(maps)
library(mapdata)
map('usa')
washPost$state <- as.character(washPost$state)
library(dplyr)
for(j in 1:length(unique(washPost$state))){
washPost$total[washPost$state == unique(washPost$state)[j]] <- n_distinct(subset(washPost, state == unique(washPost$state)[j]))
}
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
levels(washPost$race)[1] <- "U"
levels(washPost$race)
library(lubridate)
washPost$date <- ymd(as.character(washPost$date))
washPost$state <- as.character(washPost$state)
library(dplyr)
for(j in 1:length(unique(washPost$state))){
washPost$total[washPost$state == unique(washPost$state)[j]] <- n_distinct(subset(washPost, state == unique(washPost$state)[j]))
}
data(state.fips)
bloat.data <- merge(washPost, state.fips, by.x = "state", by.y = "abb")
my.data <- bloat.data[!duplicated(bloat.data$id), ]
my.colors <- colorRampPalette(c("blue","orange", "red"))(11)
my.data$colorID[0 <= my.data$total & my.data$total < 45] <- 1
my.data$colorID[45 <= my.data$total & my.data$total< 90] <- 2
my.data$colorID[90 <= my.data$total & my.data$total< 135] <- 3
my.data$colorID[135 <= my.data$total & my.data$total< 180] <- 4
my.data$colorID[180 <= my.data$total & my.data$total< 225] <- 5
my.data$colorID[225 <= my.data$total & my.data$total< 270] <- 6
my.data$colorID[270 <= my.data$total & my.data$total< 315] <- 7
my.data$colorID[315 <= my.data$total & my.data$total< 360] <- 8
my.data$colorID[360 <= my.data$total & my.data$total< 405] <- 9
my.data$colorID[405 <= my.data$total & my.data$total< 450] <- 10
my.data$colorID[450 <= my.data$total & my.data$total< 495] <- 11
my.data$color <- my.colors[my.data$colorID]
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
title(main = "Total Police Shootings Since 2015")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
View(my.data)
View(washPost)
View(bloat.data)
my.data$polyname[my.data$polyname %like% "michigan"] <- "michigan"
my.data %>%
my.data$polyname %like% "michigan%"
my.data$polyname[my.data$polyname == %like% "michigan%"] <- "michigan"
?names
my.data$polyname[names(my.data$polyname) %like% "michigan%"] <- "michigan"
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
raceCount <- table(unlist(subset(washPost, select = race)))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Frequency by victim's race", col = c("black", "red", "blue","green","orange","purple","yellow"))
library(rworldmap)
library(maps)
library(mapdata)
austinTx <- read.csv("shooting_subjects_austin_tx.csv", header = TRUE, sep = ",")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
austinTx <- read.csv("shooting_subjects_austin_tx.csv", header = TRUE, sep = ",")
library(ggplot2)
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
library(ggplot2)
#ggplot takes care of factor(mental_illness)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
source('~/Desktop/PoliSci 3780/Final Project(Police Shooting)/FinalProject.R')
washPost <- read.csv("WashPost.csv", header = TRUE, sep = ",")
levels(washPost$race)[1] <- "U"
levels(washPost$race)
attach(washPost)
library(lubridate)
washPost$date <- ymd(as.character(washPost$date))
detach(washPost)
raceCount <- table(unlist(subset(washPost, select = race)))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Frequency by victim's race", col = c("black", "red", "blue","green","orange","purple","yellow"))
barplot(raceCount, names.arg = c("Unknown", "Asian", "Black", "Hispanic", "Native-American", "Other", "White"),xlab = "Race",
ylab = "Frequency", main = "Frequency by victim's race(National)", col = c("black", "red", "blue","green","orange","purple","yellow"))
library(rworldmap)
library(maps)
library(mapdata)
washPost$state <- as.character(washPost$state)
library(dplyr)
for(j in 1:length(unique(washPost$state))){
washPost$total[washPost$state == unique(washPost$state)[j]] <- n_distinct(subset(washPost, state == unique(washPost$state)[j]))
}
data(state.fips)
bloat.data <- merge(washPost, state.fips, by.x = "state", by.y = "abb")
my.data <- bloat.data[!duplicated(bloat.data$id), ]
my.data$polyname[names(my.data$polyname) %like% "michigan%"] <- "michigan"
my.data$polyname[names(my.data$polyname) %like% "michigan%"] <- "michigan"
library(grep)
names(my.data$polyname) %like% "michigan%" <- "michigan"
my.data[names(my.data$polyname) %like% "michigan%"] <- "michigan"
View(my.data)
View(bloat.data)
my.colors <- colorRampPalette(c("blue","orange", "red"))(11)
my.data$colorID[0 <= my.data$total & my.data$total < 45] <- 1
my.data$colorID[45 <= my.data$total & my.data$total< 90] <- 2
my.data$colorID[90 <= my.data$total & my.data$total< 135] <- 3
my.data$colorID[135 <= my.data$total & my.data$total< 180] <- 4
my.data$colorID[180 <= my.data$total & my.data$total< 225] <- 5
my.data$colorID[225 <= my.data$total & my.data$total< 270] <- 6
my.data$colorID[270 <= my.data$total & my.data$total< 315] <- 7
my.data$colorID[315 <= my.data$total & my.data$total< 360] <- 8
my.data$colorID[360 <= my.data$total & my.data$total< 405] <- 9
my.data$colorID[405 <= my.data$total & my.data$total< 450] <- 10
my.data$colorID[450 <= my.data$total & my.data$total< 495] <- 11
my.data$color <- my.colors[my.data$colorID]
map('usa')
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
title(main = "Total Police Shootings Since 2015")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
legend("bottomleft", ncol = 2, c("0-45", "45-90", "135-180","180-225", "225-270","270-315","315-360",
"360-405","405-450", "450-497"), fill = my.colors, cex = .25)
View(washPost)
map("state", regions = my.data$state, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
map("state", regions = my.data$region, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
legend("bottomleft", ncol = 2, c("0-45", "45-90", "135-180","180-225", "225-270","270-315","315-360",
"360-405","405-450", "450-497"), fill = my.colors, cex = .25)
legend("bottomleft", ncol = 2, c("0-45", "45-90", "135-180","180-225", "225-270","270-315","315-360",
"360-405","405-450", "450-497"), fill = my.colors, cex = .25)
map('usa')
map("state", regions = my.data$polyname, col = my.data$color, exact = TRUE, fill = TRUE,
resolution = 0, lty = 0, projection = "mercator")
title(main = "Total Police Shootings Since 2015")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 1,
projection = "mercator")
legend("bottomleft", ncol = 2, c("0-45", "45-90", "135-180","180-225", "225-270","270-315","315-360",
"360-405","405-450", "450-497"), fill = my.colors, cex = .25)
library(ggplot2)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack", title(main = "Signs of Mental Illness Vs. None"))
?ggplot
?aes
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack", aes(main = "Signs of Mental Illness Vs. None"))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack",
ggtitle("Signs of Mental illness Vs. None"))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack",
ggtitle("Signs of Mental illness Vs. None"))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack",
ggtitle("Signs of Mental illness Vs. None", subtitle = NULL))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack",
ggtitle("Signs of Mental illness Vs. None", subtitle = NULL))
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
ggtitle("Signs of Mental illness Vs. None", subtitle = NULL)
ggtitle("Signs of Mental illness Vs. None", subtitle = NULL)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack") +
labs("Signs of Mental illness Vs. None", subtitle = NULL)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack") +
labs(title = "Signs of Mental illness Vs. None", subtitle = NULL)
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack") +
labs(title = "Signs of Mental illness Vs. None", subtitle = NULL, x = "State", y = "# of Shootings")
ggplot(my.data, aes(my.data$state)) + geom_bar(aes(fill = my.data$signs_of_mental_illness), position = "stack") +
labs(title = "Signs of Mental illness Vs. None", subtitle = NULL, x = "State", y = "# of Shootings", fill = "Mental Illness")
austinTx <- read.csv("shooting_subjects_austin_tx.csv", header = TRUE, sep = ",")
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
View(austinTx)
?ggplot
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity))
?geom_line
?geom_bar
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(austinTx$Subject.Race.Ethnicity))
fill =
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
remove(fill)
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity))
ggplot(austinTx, aes(austinTx$Subject.Race.Ethnicity)) + geom_bar(aes(fill = austinTx$Subject.Race.Ethnicity)) +
labs(title = "Frequency by race(Austin,Tx)", x = "Race", y = "# of Shootings")
